

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 23 09:00:04 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  0287                     __pidataBANK0:
   218                           
   219                           ;initializer for _display
   220  0287  343F               	retlw	63
   221  0288  3406               	retlw	6
   222  0289  345B               	retlw	91
   223  028A  344F               	retlw	79
   224  028B  3466               	retlw	102
   225  028C  346D               	retlw	109
   226  028D  347D               	retlw	125
   227  028E  3407               	retlw	7
   228  028F  347F               	retlw	127
   229  0290  346F               	retlw	111
   230  0006                     _PORTB	set	6
   231  0005                     _PORTA	set	5
   232  001E                     _ADRESH	set	30
   233  0007                     _PORTC	set	7
   234  001F                     _ADCON0bits	set	31
   235  000C                     _PIR1bits	set	12
   236  0001                     _TMR0	set	1
   237  000B                     _INTCONbits	set	11
   238  0008                     _PORTD	set	8
   239  0009                     _PORTEbits	set	9
   240  0009                     _PORTE	set	9
   241  005A                     _T0IF	set	90
   242  0081                     _OPTION_REGbits	set	129
   243  008C                     _PIE1bits	set	140
   244  009F                     _ADCON1bits	set	159
   245  008F                     _OSCCONbits	set	143
   246  0089                     _TRISE	set	137
   247  0088                     _TRISD	set	136
   248  0087                     _TRISC	set	135
   249  0086                     _TRISB	set	134
   250  0085                     _TRISA	set	133
   251  0189                     _ANSELH	set	393
   252  0188                     _ANSEL	set	392
   253                           
   254                           	psect	cinit
   255  0011                     start_initialization:	
   256                           ; #config settings
   257                           
   258  0011                     __initialization:
   259                           
   260                           ; Initialize objects allocated to BANK0
   261  0011  1383               	bcf	3,7	;select IRP bank0
   262  0012  303D               	movlw	low (__pdataBANK0+10)
   263  0013  00FD               	movwf	btemp+-1
   264  0014  3002               	movlw	high __pidataBANK0
   265  0015  00FE               	movwf	btemp
   266  0016  3087               	movlw	low __pidataBANK0
   267  0017  00FF               	movwf	btemp+1
   268  0018  3033               	movlw	low __pdataBANK0
   269  0019  0084               	movwf	4
   270  001A  120A  118A  2278  120A  118A  	fcall	init_ram0
   271                           
   272                           ; Clear objects allocated to BANK0
   273  001F  01BD               	clrf	__pbssBANK0& (0+127)
   274  0020  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   275                           
   276                           ; Clear objects allocated to COMMON
   277  0021  01F6               	clrf	__pbssCOMMON& (0+127)
   278  0022  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   279  0023  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   280  0024  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   281  0025                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  0025                     __end_of__initialization:
   285  0025  0183               	clrf	3
   286  0026  120A  118A  2A16   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMMON
   289  0076                     __pbssCOMMON:
   290  0076                     _ponteciometro:
   291  0076                     	ds	1
   292  0077                     _centenas:
   293  0077                     	ds	1
   294  0078                     _unidades:
   295  0078                     	ds	1
   296  0079                     _banderas:
   297  0079                     	ds	1
   298                           
   299                           	psect	bssBANK0
   300  003D                     __pbssBANK0:
   301  003D                     _contador:
   302  003D                     	ds	1
   303  003E                     _decenas:
   304  003E                     	ds	1
   305                           
   306                           	psect	dataBANK0
   307  0033                     __pdataBANK0:
   308  0033                     _display:
   309  0033                     	ds	10
   310                           
   311                           	psect	inittext
   312  0274                     init_fetch0:	
   313                           ;	Called with low address in FSR and high address in W
   314                           
   315  0274  087E               	movf	btemp,w
   316  0275  008A               	movwf	10
   317  0276  087F               	movf	btemp+1,w
   318  0277  0082               	movwf	2
   319  0278                     init_ram0:	
   320                           ;Called with:
   321                           ;	high address of idata address in btemp 
   322                           ;	low address of idata address in btemp+1 
   323                           ;	low address of data in FSR
   324                           ;	high address + 1 of data in btemp-1
   325                           
   326  0278  120A  118A  2274  120A  118A  	fcall	init_fetch0
   327  027D  0080               	movwf	0
   328  027E  0A84               	incf	4,f
   329  027F  0804               	movf	4,w
   330  0280  067D               	xorwf	btemp+-1,w
   331  0281  1903               	btfsc	3,2
   332  0282  3400               	retlw	0
   333  0283  0AFF               	incf	btemp+1,f
   334  0284  1903               	btfsc	3,2
   335  0285  0AFE               	incf	btemp,f
   336  0286  2A78               	goto	init_ram0
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_setup:
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_divisiones:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 2 bytes @ 0x0
   355  0070                     	ds	4
   356  0074                     ??_setup:
   357  0074                     ??___wmul:	
   358                           ; 1 bytes @ 0x4
   359                           
   360  0074                     ??___awmod:	
   361                           ; 1 bytes @ 0x4
   362                           
   363  0074                     ___wmul@product:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 2 bytes @ 0x4
   368  0074                     	ds	2
   369                           
   370                           	psect	cstackBANK0
   371  0020                     __pcstackBANK0:
   372  0020                     ?___wmul:
   373  0020                     ?___awmod:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0020                     ___wmul@multiplier:	
   377                           ; 2 bytes @ 0x0
   378                           
   379  0020                     ___awmod@divisor:	
   380                           ; 2 bytes @ 0x0
   381                           
   382                           
   383                           ; 2 bytes @ 0x0
   384  0020                     	ds	2
   385  0022                     ___wmul@multiplicand:
   386  0022                     ___awmod@dividend:	
   387                           ; 2 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391  0022                     	ds	2
   392  0024                     ___awmod@counter:
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	1
   396  0025                     ___awmod@sign:
   397                           
   398                           ; 1 bytes @ 0x5
   399  0025                     	ds	1
   400  0026                     ?___awdiv:
   401  0026                     ___awdiv@divisor:	
   402                           ; 2 bytes @ 0x6
   403                           
   404                           
   405                           ; 2 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ___awdiv@dividend:
   408                           
   409                           ; 2 bytes @ 0x8
   410  0028                     	ds	2
   411  002A                     ??___awdiv:
   412                           
   413                           ; 1 bytes @ 0xA
   414  002A                     	ds	1
   415  002B                     ___awdiv@counter:
   416                           
   417                           ; 1 bytes @ 0xB
   418  002B                     	ds	1
   419  002C                     ___awdiv@sign:
   420                           
   421                           ; 1 bytes @ 0xC
   422  002C                     	ds	1
   423  002D                     ___awdiv@quotient:
   424                           
   425                           ; 2 bytes @ 0xD
   426  002D                     	ds	2
   427  002F                     ??_divisiones:
   428                           
   429                           ; 1 bytes @ 0xF
   430  002F                     	ds	3
   431  0032                     ??_main:
   432                           
   433                           ; 1 bytes @ 0x12
   434  0032                     	ds	1
   435                           
   436                           	psect	maintext
   437  0216                     __pmaintext:	
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 117 in file "Prelab8.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : B00/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       1       0       0       0
   460 ;;      Totals:         0       1       0       0       0
   461 ;;Total ram usage:        1 bytes
   462 ;; Hardware stack levels required when called: 3
   463 ;; This function calls:
   464 ;;		_divisiones
   465 ;;		_setup
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471  0216                     _main:	
   472                           ;psect for function _main
   473                           
   474  0216                     l1119:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   477                           
   478                           
   479                           ;Prelab8.c: 118:     setup();
   480  0216  120A  118A  21BE  120A  118A  	fcall	_setup
   481  021B                     l1121:
   482                           
   483                           ;Prelab8.c: 120:         if(ADCON0bits.GO == 0){
   484  021B  1283               	bcf	3,5	;RP0=0, select bank0
   485  021C  1303               	bcf	3,6	;RP1=0, select bank0
   486  021D  189F               	btfsc	31,1	;volatile
   487  021E  2A20               	goto	u801
   488  021F  2A21               	goto	u800
   489  0220                     u801:
   490  0220  2A44               	goto	l1135
   491  0221                     u800:
   492  0221                     l1123:
   493                           
   494                           ;Prelab8.c: 123:             if(ADCON0bits.CHS == 0b0000)
   495  0221  0C1F               	rrf	31,w	;volatile
   496  0222  00B2               	movwf	??_main
   497  0223  0C32               	rrf	??_main,w
   498  0224  390F               	andlw	15
   499  0225  3A00               	xorlw	0
   500  0226  1D03               	skipz
   501  0227  2A29               	goto	u811
   502  0228  2A2A               	goto	u810
   503  0229                     u811:
   504  0229  2A2F               	goto	l1127
   505  022A                     u810:
   506  022A                     l1125:
   507                           
   508                           ;Prelab8.c: 124:                 ADCON0bits.CHS = 0b0001;
   509  022A  081F               	movf	31,w	;volatile
   510  022B  39C3               	andlw	-61
   511  022C  3804               	iorlw	4
   512  022D  009F               	movwf	31	;volatile
   513  022E  2A3A               	goto	l1131
   514  022F                     l1127:
   515  022F  0C1F               	rrf	31,w	;volatile
   516  0230  00B2               	movwf	??_main
   517  0231  0C32               	rrf	??_main,w
   518  0232  390F               	andlw	15
   519  0233  3A01               	xorlw	1
   520  0234  1D03               	skipz
   521  0235  2A37               	goto	u821
   522  0236  2A38               	goto	u820
   523  0237                     u821:
   524  0237  2A3A               	goto	l1131
   525  0238                     u820:
   526  0238                     l1129:
   527                           
   528                           ;Prelab8.c: 126:                 ADCON0bits.CHS = 0b0000;
   529  0238  30C3               	movlw	-61
   530  0239  059F               	andwf	31,f	;volatile
   531  023A                     l1131:
   532                           
   533                           ;Prelab8.c: 127:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   534  023A  300C               	movlw	12
   535  023B  1283               	bcf	3,5	;RP0=0, select bank0
   536  023C  1303               	bcf	3,6	;RP1=0, select bank0
   537  023D  00B2               	movwf	??_main
   538  023E                     u837:
   539  023E  0BB2               	decfsz	??_main,f
   540  023F  2A3E               	goto	u837
   541  0240  0000               	nop
   542  0241                     l1133:
   543                           
   544                           ;Prelab8.c: 129:             ADCON0bits.GO = 1;
   545  0241  1283               	bcf	3,5	;RP0=0, select bank0
   546  0242  1303               	bcf	3,6	;RP1=0, select bank0
   547  0243  149F               	bsf	31,1	;volatile
   548  0244                     l1135:
   549                           
   550                           ;Prelab8.c: 132:         divisiones();
   551  0244  120A  118A  2029  120A  118A  	fcall	_divisiones
   552  0249  2A1B               	goto	l1121
   553  024A  120A  118A  280E   	ljmp	start
   554  024D                     __end_of_main:
   555                           
   556                           	psect	text1
   557  01BE                     __ptext1:	
   558 ;; *************** function _setup *****************
   559 ;; Defined at:
   560 ;;		line 140 in file "Prelab8.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0
   576 ;;      Temps:          1       0       0       0       0
   577 ;;      Totals:         1       0       0       0       0
   578 ;;Total ram usage:        1 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  01BE                     _setup:	
   589                           ;psect for function _setup
   590                           
   591  01BE                     l787:	
   592                           ;incstack = 0
   593                           ; Regs used in _setup: [wreg+status,2+status,0]
   594                           
   595                           
   596                           ;Prelab8.c: 141:     ANSEL = 0b00000011;
   597  01BE  3003               	movlw	3
   598  01BF  1683               	bsf	3,5	;RP0=1, select bank3
   599  01C0  1703               	bsf	3,6	;RP1=1, select bank3
   600  01C1  0088               	movwf	8	;volatile
   601  01C2                     l789:
   602                           
   603                           ;Prelab8.c: 142:     ANSELH = 0;
   604  01C2  0189               	clrf	9	;volatile
   605  01C3                     l791:
   606                           
   607                           ;Prelab8.c: 146:     TRISA = 0b00000011;
   608  01C3  3003               	movlw	3
   609  01C4  1683               	bsf	3,5	;RP0=1, select bank1
   610  01C5  1303               	bcf	3,6	;RP1=0, select bank1
   611  01C6  0085               	movwf	5	;volatile
   612                           
   613                           ;Prelab8.c: 148:     PORTA = 0;
   614  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   615  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   616  01C9  0185               	clrf	5	;volatile
   617                           
   618                           ;Prelab8.c: 149:     TRISB = 0;
   619  01CA  1683               	bsf	3,5	;RP0=1, select bank1
   620  01CB  1303               	bcf	3,6	;RP1=0, select bank1
   621  01CC  0186               	clrf	6	;volatile
   622                           
   623                           ;Prelab8.c: 150:     PORTB = 0;
   624  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   625  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   626  01CF  0186               	clrf	6	;volatile
   627                           
   628                           ;Prelab8.c: 151:     TRISC = 0;
   629  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   630  01D1  1303               	bcf	3,6	;RP1=0, select bank1
   631  01D2  0187               	clrf	7	;volatile
   632                           
   633                           ;Prelab8.c: 152:     PORTC = 0;
   634  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   635  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   636  01D5  0187               	clrf	7	;volatile
   637                           
   638                           ;Prelab8.c: 153:     TRISD = 0;
   639  01D6  1683               	bsf	3,5	;RP0=1, select bank1
   640  01D7  1303               	bcf	3,6	;RP1=0, select bank1
   641  01D8  0188               	clrf	8	;volatile
   642                           
   643                           ;Prelab8.c: 154:     PORTD = 0;
   644  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   645  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   646  01DB  0188               	clrf	8	;volatile
   647                           
   648                           ;Prelab8.c: 155:     TRISE = 0;
   649  01DC  1683               	bsf	3,5	;RP0=1, select bank1
   650  01DD  1303               	bcf	3,6	;RP1=0, select bank1
   651  01DE  0189               	clrf	9	;volatile
   652                           
   653                           ;Prelab8.c: 156:     PORTE = 0;
   654  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   655  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   656  01E1  0189               	clrf	9	;volatile
   657  01E2                     l793:
   658                           
   659                           ;Prelab8.c: 159:     OSCCONbits.IRCF = 0b0110;
   660  01E2  1683               	bsf	3,5	;RP0=1, select bank1
   661  01E3  1303               	bcf	3,6	;RP1=0, select bank1
   662  01E4  080F               	movf	15,w	;volatile
   663  01E5  398F               	andlw	-113
   664  01E6  3860               	iorlw	96
   665  01E7  008F               	movwf	15	;volatile
   666  01E8                     l795:
   667                           
   668                           ;Prelab8.c: 160:     OSCCONbits.SCS = 1;
   669  01E8  140F               	bsf	15,0	;volatile
   670  01E9                     l797:
   671                           
   672                           ;Prelab8.c: 163:     ADCON0bits.ADCS = 0b01;
   673  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   674  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   675  01EB  081F               	movf	31,w	;volatile
   676  01EC  393F               	andlw	-193
   677  01ED  3840               	iorlw	64
   678  01EE  009F               	movwf	31	;volatile
   679  01EF                     l799:
   680                           
   681                           ;Prelab8.c: 164:     ADCON1bits.VCFG0 = 0;
   682  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   683  01F0  1303               	bcf	3,6	;RP1=0, select bank1
   684  01F1  121F               	bcf	31,4	;volatile
   685  01F2                     l801:
   686                           
   687                           ;Prelab8.c: 165:     ADCON1bits.VCFG1 = 0;
   688  01F2  129F               	bcf	31,5	;volatile
   689  01F3                     l803:
   690                           
   691                           ;Prelab8.c: 166:     ADCON0bits.CHS = 0b0000;
   692  01F3  30C3               	movlw	-61
   693  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   694  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   695  01F6  059F               	andwf	31,f	;volatile
   696  01F7                     l805:
   697                           
   698                           ;Prelab8.c: 167:     ADCON1bits.ADFM = 0;
   699  01F7  1683               	bsf	3,5	;RP0=1, select bank1
   700  01F8  1303               	bcf	3,6	;RP1=0, select bank1
   701  01F9  139F               	bcf	31,7	;volatile
   702  01FA                     l807:
   703                           
   704                           ;Prelab8.c: 168:     ADCON0bits.ADON = 1;
   705  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   706  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   707  01FC  141F               	bsf	31,0	;volatile
   708  01FD                     l809:
   709                           
   710                           ;Prelab8.c: 169:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   711  01FD  300D               	movlw	13
   712  01FE  00F4               	movwf	??_setup
   713  01FF                     u847:
   714  01FF  0BF4               	decfsz	??_setup,f
   715  0200  29FF               	goto	u847
   716  0201                     l811:
   717                           
   718                           ;Prelab8.c: 172:     PIR1bits.ADIF = 0;
   719  0201  1283               	bcf	3,5	;RP0=0, select bank0
   720  0202  1303               	bcf	3,6	;RP1=0, select bank0
   721  0203  130C               	bcf	12,6	;volatile
   722  0204                     l813:
   723                           
   724                           ;Prelab8.c: 173:     PIE1bits.ADIE = 1;
   725  0204  1683               	bsf	3,5	;RP0=1, select bank1
   726  0205  1303               	bcf	3,6	;RP1=0, select bank1
   727  0206  170C               	bsf	12,6	;volatile
   728  0207                     l815:
   729                           
   730                           ;Prelab8.c: 174:     INTCONbits.PEIE = 1;
   731  0207  170B               	bsf	11,6	;volatile
   732  0208                     l817:
   733                           
   734                           ;Prelab8.c: 175:     INTCONbits.GIE = 1;
   735  0208  178B               	bsf	11,7	;volatile
   736  0209                     l819:
   737                           
   738                           ;Prelab8.c: 177:     INTCONbits.T0IE = 1;
   739  0209  168B               	bsf	11,5	;volatile
   740  020A                     l821:
   741                           
   742                           ;Prelab8.c: 178:     INTCONbits.T0IF = 0;
   743  020A  110B               	bcf	11,2	;volatile
   744  020B                     l823:
   745                           
   746                           ;Prelab8.c: 180:     OPTION_REGbits.PSA = 0;
   747  020B  1181               	bcf	1,3	;volatile
   748  020C                     l825:
   749                           
   750                           ;Prelab8.c: 181:     OPTION_REGbits.T0CS = 0;
   751  020C  1281               	bcf	1,5	;volatile
   752  020D                     l827:
   753                           
   754                           ;Prelab8.c: 182:     OPTION_REGbits.PS2 = 1;
   755  020D  1501               	bsf	1,2	;volatile
   756  020E                     l829:
   757                           
   758                           ;Prelab8.c: 183:     OPTION_REGbits.PS1 = 1;
   759  020E  1481               	bsf	1,1	;volatile
   760  020F                     l831:
   761                           
   762                           ;Prelab8.c: 184:     OPTION_REGbits.PS0 = 1;
   763  020F  1401               	bsf	1,0	;volatile
   764  0210                     l833:
   765                           
   766                           ;Prelab8.c: 186:     TMR0= 217;
   767  0210  30D9               	movlw	217
   768  0211  1283               	bcf	3,5	;RP0=0, select bank0
   769  0212  1303               	bcf	3,6	;RP1=0, select bank0
   770  0213  0081               	movwf	1	;volatile
   771  0214                     l835:
   772                           
   773                           ;Prelab8.c: 188:     banderas = 0b00000000;
   774  0214  01F9               	clrf	_banderas
   775  0215                     l96:
   776  0215  0008               	return
   777  0216                     __end_of_setup:
   778                           
   779                           	psect	text2
   780  0029                     __ptext2:	
   781 ;; *************** function _divisiones *****************
   782 ;; Defined at:
   783 ;;		line 191 in file "Prelab8.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2   26[None  ] int 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       3       0       0       0
   800 ;;      Totals:         0       3       0       0       0
   801 ;;Total ram usage:        3 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 2
   804 ;; This function calls:
   805 ;;		___awdiv
   806 ;;		___awmod
   807 ;;		___wmul
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813  0029                     _divisiones:	
   814                           ;psect for function _divisiones
   815                           
   816  0029                     l1117:	
   817                           ;incstack = 0
   818                           ; Regs used in _divisiones: [wreg+status,2+status,0+pclath+cstack]
   819                           
   820                           
   821                           ;Prelab8.c: 192:     centenas = ponteciometro%10;
   822  0029  300A               	movlw	10
   823  002A  1283               	bcf	3,5	;RP0=0, select bank0
   824  002B  1303               	bcf	3,6	;RP1=0, select bank0
   825  002C  00A0               	movwf	___awmod@divisor
   826  002D  3000               	movlw	0
   827  002E  00A1               	movwf	___awmod@divisor+1
   828  002F  0876               	movf	_ponteciometro,w
   829  0030  00AF               	movwf	??_divisiones
   830  0031  01B0               	clrf	??_divisiones+1
   831  0032  082F               	movf	??_divisiones,w
   832  0033  00A2               	movwf	___awmod@dividend
   833  0034  0830               	movf	??_divisiones+1,w
   834  0035  00A3               	movwf	___awmod@dividend+1
   835  0036  120A  118A  2163  120A  118A  	fcall	___awmod
   836  003B  1283               	bcf	3,5	;RP0=0, select bank0
   837  003C  1303               	bcf	3,6	;RP1=0, select bank0
   838  003D  0820               	movf	?___awmod,w
   839  003E  00B1               	movwf	??_divisiones+2
   840  003F  0831               	movf	??_divisiones+2,w
   841  0040  00F7               	movwf	_centenas
   842                           
   843                           ;Prelab8.c: 193:     decenas = (ponteciometro%100 - centenas)/10;
   844  0041  300A               	movlw	10
   845  0042  00A6               	movwf	___awdiv@divisor
   846  0043  3000               	movlw	0
   847  0044  00A7               	movwf	___awdiv@divisor+1
   848  0045  3064               	movlw	100
   849  0046  00A0               	movwf	___awmod@divisor
   850  0047  3000               	movlw	0
   851  0048  00A1               	movwf	___awmod@divisor+1
   852  0049  0876               	movf	_ponteciometro,w
   853  004A  00AF               	movwf	??_divisiones
   854  004B  01B0               	clrf	??_divisiones+1
   855  004C  082F               	movf	??_divisiones,w
   856  004D  00A2               	movwf	___awmod@dividend
   857  004E  0830               	movf	??_divisiones+1,w
   858  004F  00A3               	movwf	___awmod@dividend+1
   859  0050  120A  118A  2163  120A  118A  	fcall	___awmod
   860  0055  0877               	movf	_centenas,w
   861  0056  1283               	bcf	3,5	;RP0=0, select bank0
   862  0057  1303               	bcf	3,6	;RP1=0, select bank0
   863  0058  0220               	subwf	?___awmod,w
   864  0059  00A8               	movwf	___awdiv@dividend
   865  005A  0821               	movf	?___awmod+1,w
   866  005B  1C03               	skipc
   867  005C  0321               	decf	?___awmod+1,w
   868  005D  00A9               	movwf	___awdiv@dividend+1
   869  005E  120A  118A  2092  120A  118A  	fcall	___awdiv
   870  0063  1283               	bcf	3,5	;RP0=0, select bank0
   871  0064  1303               	bcf	3,6	;RP1=0, select bank0
   872  0065  0826               	movf	?___awdiv,w
   873  0066  00B1               	movwf	??_divisiones+2
   874  0067  0831               	movf	??_divisiones+2,w
   875  0068  00BE               	movwf	_decenas
   876                           
   877                           ;Prelab8.c: 194:     unidades = (ponteciometro - centenas*10 - centenas)/100;
   878  0069  3064               	movlw	100
   879  006A  00A6               	movwf	___awdiv@divisor
   880  006B  3000               	movlw	0
   881  006C  00A7               	movwf	___awdiv@divisor+1
   882  006D  0877               	movf	_centenas,w
   883  006E  00AF               	movwf	??_divisiones
   884  006F  01B0               	clrf	??_divisiones+1
   885  0070  082F               	movf	??_divisiones,w
   886  0071  00A0               	movwf	___wmul@multiplier
   887  0072  0830               	movf	??_divisiones+1,w
   888  0073  00A1               	movwf	___wmul@multiplier+1
   889  0074  30F5               	movlw	245
   890  0075  00A2               	movwf	___wmul@multiplicand
   891  0076  30FF               	movlw	255
   892  0077  00A3               	movwf	___wmul@multiplicand+1
   893  0078  120A  118A  224D  120A  118A  	fcall	___wmul
   894  007D  0876               	movf	_ponteciometro,w
   895  007E  1283               	bcf	3,5	;RP0=0, select bank0
   896  007F  1303               	bcf	3,6	;RP1=0, select bank0
   897  0080  0720               	addwf	?___wmul,w
   898  0081  00A8               	movwf	___awdiv@dividend
   899  0082  0821               	movf	?___wmul+1,w
   900  0083  1803               	skipnc
   901  0084  0A21               	incf	?___wmul+1,w
   902  0085  00A9               	movwf	___awdiv@dividend+1
   903  0086  120A  118A  2092  120A  118A  	fcall	___awdiv
   904  008B  1283               	bcf	3,5	;RP0=0, select bank0
   905  008C  1303               	bcf	3,6	;RP1=0, select bank0
   906  008D  0826               	movf	?___awdiv,w
   907  008E  00B1               	movwf	??_divisiones+2
   908  008F  0831               	movf	??_divisiones+2,w
   909  0090  00F8               	movwf	_unidades
   910  0091                     l99:
   911  0091  0008               	return
   912  0092                     __end_of_divisiones:
   913                           
   914                           	psect	text3
   915  024D                     __ptext3:	
   916 ;; *************** function ___wmul *****************
   917 ;; Defined at:
   918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  multiplier      2    0[BANK0 ] unsigned int 
   921 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  product         2    4[COMMON] unsigned int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2    0[BANK0 ] unsigned int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       4       0       0       0
   934 ;;      Locals:         2       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         2       4       0       0       0
   937 ;;Total ram usage:        6 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_divisiones
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947  024D                     ___wmul:	
   948                           ;psect for function ___wmul
   949                           
   950  024D                     l1065:	
   951                           ;incstack = 0
   952                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   953                           
   954  024D  01F4               	clrf	___wmul@product
   955  024E  01F5               	clrf	___wmul@product+1
   956  024F                     l1067:
   957  024F  1283               	bcf	3,5	;RP0=0, select bank0
   958  0250  1303               	bcf	3,6	;RP1=0, select bank0
   959  0251  1C20               	btfss	___wmul@multiplier,0
   960  0252  2A54               	goto	u671
   961  0253  2A55               	goto	u670
   962  0254                     u671:
   963  0254  2A5B               	goto	l185
   964  0255                     u670:
   965  0255                     l1069:
   966  0255  0822               	movf	___wmul@multiplicand,w
   967  0256  07F4               	addwf	___wmul@product,f
   968  0257  1803               	skipnc
   969  0258  0AF5               	incf	___wmul@product+1,f
   970  0259  0823               	movf	___wmul@multiplicand+1,w
   971  025A  07F5               	addwf	___wmul@product+1,f
   972  025B                     l185:
   973  025B  3001               	movlw	1
   974  025C                     u685:
   975  025C  1003               	clrc
   976  025D  0DA2               	rlf	___wmul@multiplicand,f
   977  025E  0DA3               	rlf	___wmul@multiplicand+1,f
   978  025F  3EFF               	addlw	-1
   979  0260  1D03               	skipz
   980  0261  2A5C               	goto	u685
   981  0262                     l1071:
   982  0262  3001               	movlw	1
   983  0263                     u695:
   984  0263  1003               	clrc
   985  0264  0CA1               	rrf	___wmul@multiplier+1,f
   986  0265  0CA0               	rrf	___wmul@multiplier,f
   987  0266  3EFF               	addlw	-1
   988  0267  1D03               	skipz
   989  0268  2A63               	goto	u695
   990  0269                     l1073:
   991  0269  0820               	movf	___wmul@multiplier,w
   992  026A  0421               	iorwf	___wmul@multiplier+1,w
   993  026B  1D03               	btfss	3,2
   994  026C  2A6E               	goto	u701
   995  026D  2A6F               	goto	u700
   996  026E                     u701:
   997  026E  2A4F               	goto	l1067
   998  026F                     u700:
   999  026F                     l1075:
  1000  026F  0875               	movf	___wmul@product+1,w
  1001  0270  00A1               	movwf	?___wmul+1
  1002  0271  0874               	movf	___wmul@product,w
  1003  0272  00A0               	movwf	?___wmul
  1004  0273                     l187:
  1005  0273  0008               	return
  1006  0274                     __end_of___wmul:
  1007                           
  1008                           	psect	text4
  1009  0163                     __ptext4:	
  1010 ;; *************** function ___awmod *****************
  1011 ;; Defined at:
  1012 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  divisor         2    0[BANK0 ] int 
  1015 ;;  dividend        2    2[BANK0 ] int 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  sign            1    5[BANK0 ] unsigned char 
  1018 ;;  counter         1    4[BANK0 ] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2    0[BANK0 ] int 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       4       0       0       0
  1029 ;;      Locals:         0       2       0       0       0
  1030 ;;      Temps:          1       0       0       0       0
  1031 ;;      Totals:         1       6       0       0       0
  1032 ;;Total ram usage:        7 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_divisiones
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042  0163                     ___awmod:	
  1043                           ;psect for function ___awmod
  1044                           
  1045  0163                     l1079:	
  1046                           ;incstack = 0
  1047                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1048                           
  1049  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0165  01A5               	clrf	___awmod@sign
  1052  0166                     l1081:
  1053  0166  1FA3               	btfss	___awmod@dividend+1,7
  1054  0167  2969               	goto	u711
  1055  0168  296A               	goto	u710
  1056  0169                     u711:
  1057  0169  2971               	goto	l1087
  1058  016A                     u710:
  1059  016A                     l1083:
  1060  016A  09A2               	comf	___awmod@dividend,f
  1061  016B  09A3               	comf	___awmod@dividend+1,f
  1062  016C  0AA2               	incf	___awmod@dividend,f
  1063  016D  1903               	skipnz
  1064  016E  0AA3               	incf	___awmod@dividend+1,f
  1065  016F                     l1085:
  1066  016F  01A5               	clrf	___awmod@sign
  1067  0170  0AA5               	incf	___awmod@sign,f
  1068  0171                     l1087:
  1069  0171  1FA1               	btfss	___awmod@divisor+1,7
  1070  0172  2974               	goto	u721
  1071  0173  2975               	goto	u720
  1072  0174                     u721:
  1073  0174  297A               	goto	l1091
  1074  0175                     u720:
  1075  0175                     l1089:
  1076  0175  09A0               	comf	___awmod@divisor,f
  1077  0176  09A1               	comf	___awmod@divisor+1,f
  1078  0177  0AA0               	incf	___awmod@divisor,f
  1079  0178  1903               	skipnz
  1080  0179  0AA1               	incf	___awmod@divisor+1,f
  1081  017A                     l1091:
  1082  017A  0820               	movf	___awmod@divisor,w
  1083  017B  0421               	iorwf	___awmod@divisor+1,w
  1084  017C  1903               	btfsc	3,2
  1085  017D  297F               	goto	u731
  1086  017E  2980               	goto	u730
  1087  017F                     u731:
  1088  017F  29AF               	goto	l1109
  1089  0180                     u730:
  1090  0180                     l1093:
  1091  0180  01A4               	clrf	___awmod@counter
  1092  0181  0AA4               	incf	___awmod@counter,f
  1093  0182  298E               	goto	l1099
  1094  0183                     l1095:
  1095  0183  3001               	movlw	1
  1096  0184                     u745:
  1097  0184  1003               	clrc
  1098  0185  0DA0               	rlf	___awmod@divisor,f
  1099  0186  0DA1               	rlf	___awmod@divisor+1,f
  1100  0187  3EFF               	addlw	-1
  1101  0188  1D03               	skipz
  1102  0189  2984               	goto	u745
  1103  018A                     l1097:
  1104  018A  3001               	movlw	1
  1105  018B  00F4               	movwf	??___awmod
  1106  018C  0874               	movf	??___awmod,w
  1107  018D  07A4               	addwf	___awmod@counter,f
  1108  018E                     l1099:
  1109  018E  1FA1               	btfss	___awmod@divisor+1,7
  1110  018F  2991               	goto	u751
  1111  0190  2992               	goto	u750
  1112  0191                     u751:
  1113  0191  2983               	goto	l1095
  1114  0192                     u750:
  1115  0192                     l1101:
  1116  0192  0821               	movf	___awmod@divisor+1,w
  1117  0193  0223               	subwf	___awmod@dividend+1,w
  1118  0194  1D03               	skipz
  1119  0195  2998               	goto	u765
  1120  0196  0820               	movf	___awmod@divisor,w
  1121  0197  0222               	subwf	___awmod@dividend,w
  1122  0198                     u765:
  1123  0198  1C03               	skipc
  1124  0199  299B               	goto	u761
  1125  019A  299C               	goto	u760
  1126  019B                     u761:
  1127  019B  29A2               	goto	l1105
  1128  019C                     u760:
  1129  019C                     l1103:
  1130  019C  0820               	movf	___awmod@divisor,w
  1131  019D  02A2               	subwf	___awmod@dividend,f
  1132  019E  0821               	movf	___awmod@divisor+1,w
  1133  019F  1C03               	skipc
  1134  01A0  03A3               	decf	___awmod@dividend+1,f
  1135  01A1  02A3               	subwf	___awmod@dividend+1,f
  1136  01A2                     l1105:
  1137  01A2  3001               	movlw	1
  1138  01A3                     u775:
  1139  01A3  1003               	clrc
  1140  01A4  0CA1               	rrf	___awmod@divisor+1,f
  1141  01A5  0CA0               	rrf	___awmod@divisor,f
  1142  01A6  3EFF               	addlw	-1
  1143  01A7  1D03               	skipz
  1144  01A8  29A3               	goto	u775
  1145  01A9                     l1107:
  1146  01A9  3001               	movlw	1
  1147  01AA  02A4               	subwf	___awmod@counter,f
  1148  01AB  1D03               	btfss	3,2
  1149  01AC  29AE               	goto	u781
  1150  01AD  29AF               	goto	u780
  1151  01AE                     u781:
  1152  01AE  2992               	goto	l1101
  1153  01AF                     u780:
  1154  01AF                     l1109:
  1155  01AF  0825               	movf	___awmod@sign,w
  1156  01B0  1903               	btfsc	3,2
  1157  01B1  29B3               	goto	u791
  1158  01B2  29B4               	goto	u790
  1159  01B3                     u791:
  1160  01B3  29B9               	goto	l1113
  1161  01B4                     u790:
  1162  01B4                     l1111:
  1163  01B4  09A2               	comf	___awmod@dividend,f
  1164  01B5  09A3               	comf	___awmod@dividend+1,f
  1165  01B6  0AA2               	incf	___awmod@dividend,f
  1166  01B7  1903               	skipnz
  1167  01B8  0AA3               	incf	___awmod@dividend+1,f
  1168  01B9                     l1113:
  1169  01B9  0823               	movf	___awmod@dividend+1,w
  1170  01BA  00A1               	movwf	?___awmod+1
  1171  01BB  0822               	movf	___awmod@dividend,w
  1172  01BC  00A0               	movwf	?___awmod
  1173  01BD                     l351:
  1174  01BD  0008               	return
  1175  01BE                     __end_of___awmod:
  1176                           
  1177                           	psect	text5
  1178  0092                     __ptext5:	
  1179 ;; *************** function ___awdiv *****************
  1180 ;; Defined at:
  1181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  divisor         2    6[BANK0 ] int 
  1184 ;;  dividend        2    8[BANK0 ] int 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  quotient        2   13[BANK0 ] int 
  1187 ;;  sign            1   12[BANK0 ] unsigned char 
  1188 ;;  counter         1   11[BANK0 ] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    6[BANK0 ] int 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       4       0       0       0
  1199 ;;      Locals:         0       4       0       0       0
  1200 ;;      Temps:          0       1       0       0       0
  1201 ;;      Totals:         0       9       0       0       0
  1202 ;;Total ram usage:        9 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_divisiones
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212  0092                     ___awdiv:	
  1213                           ;psect for function ___awdiv
  1214                           
  1215  0092                     l917:	
  1216                           ;incstack = 0
  1217                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1218                           
  1219  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0094  01AC               	clrf	___awdiv@sign
  1222  0095                     l919:
  1223  0095  1FA7               	btfss	___awdiv@divisor+1,7
  1224  0096  2898               	goto	u381
  1225  0097  2899               	goto	u380
  1226  0098                     u381:
  1227  0098  28A0               	goto	l925
  1228  0099                     u380:
  1229  0099                     l921:
  1230  0099  09A6               	comf	___awdiv@divisor,f
  1231  009A  09A7               	comf	___awdiv@divisor+1,f
  1232  009B  0AA6               	incf	___awdiv@divisor,f
  1233  009C  1903               	skipnz
  1234  009D  0AA7               	incf	___awdiv@divisor+1,f
  1235  009E                     l923:
  1236  009E  01AC               	clrf	___awdiv@sign
  1237  009F  0AAC               	incf	___awdiv@sign,f
  1238  00A0                     l925:
  1239  00A0  1FA9               	btfss	___awdiv@dividend+1,7
  1240  00A1  28A3               	goto	u391
  1241  00A2  28A4               	goto	u390
  1242  00A3                     u391:
  1243  00A3  28AD               	goto	l931
  1244  00A4                     u390:
  1245  00A4                     l927:
  1246  00A4  09A8               	comf	___awdiv@dividend,f
  1247  00A5  09A9               	comf	___awdiv@dividend+1,f
  1248  00A6  0AA8               	incf	___awdiv@dividend,f
  1249  00A7  1903               	skipnz
  1250  00A8  0AA9               	incf	___awdiv@dividend+1,f
  1251  00A9                     l929:
  1252  00A9  3001               	movlw	1
  1253  00AA  00AA               	movwf	??___awdiv
  1254  00AB  082A               	movf	??___awdiv,w
  1255  00AC  06AC               	xorwf	___awdiv@sign,f
  1256  00AD                     l931:
  1257  00AD  01AD               	clrf	___awdiv@quotient
  1258  00AE  01AE               	clrf	___awdiv@quotient+1
  1259  00AF                     l933:
  1260  00AF  0826               	movf	___awdiv@divisor,w
  1261  00B0  0427               	iorwf	___awdiv@divisor+1,w
  1262  00B1  1903               	btfsc	3,2
  1263  00B2  28B4               	goto	u401
  1264  00B3  28B5               	goto	u400
  1265  00B4                     u401:
  1266  00B4  28EC               	goto	l953
  1267  00B5                     u400:
  1268  00B5                     l935:
  1269  00B5  01AB               	clrf	___awdiv@counter
  1270  00B6  0AAB               	incf	___awdiv@counter,f
  1271  00B7  28C3               	goto	l941
  1272  00B8                     l937:
  1273  00B8  3001               	movlw	1
  1274  00B9                     u415:
  1275  00B9  1003               	clrc
  1276  00BA  0DA6               	rlf	___awdiv@divisor,f
  1277  00BB  0DA7               	rlf	___awdiv@divisor+1,f
  1278  00BC  3EFF               	addlw	-1
  1279  00BD  1D03               	skipz
  1280  00BE  28B9               	goto	u415
  1281  00BF                     l939:
  1282  00BF  3001               	movlw	1
  1283  00C0  00AA               	movwf	??___awdiv
  1284  00C1  082A               	movf	??___awdiv,w
  1285  00C2  07AB               	addwf	___awdiv@counter,f
  1286  00C3                     l941:
  1287  00C3  1FA7               	btfss	___awdiv@divisor+1,7
  1288  00C4  28C6               	goto	u421
  1289  00C5  28C7               	goto	u420
  1290  00C6                     u421:
  1291  00C6  28B8               	goto	l937
  1292  00C7                     u420:
  1293  00C7                     l943:
  1294  00C7  3001               	movlw	1
  1295  00C8                     u435:
  1296  00C8  1003               	clrc
  1297  00C9  0DAD               	rlf	___awdiv@quotient,f
  1298  00CA  0DAE               	rlf	___awdiv@quotient+1,f
  1299  00CB  3EFF               	addlw	-1
  1300  00CC  1D03               	skipz
  1301  00CD  28C8               	goto	u435
  1302  00CE  0827               	movf	___awdiv@divisor+1,w
  1303  00CF  0229               	subwf	___awdiv@dividend+1,w
  1304  00D0  1D03               	skipz
  1305  00D1  28D4               	goto	u445
  1306  00D2  0826               	movf	___awdiv@divisor,w
  1307  00D3  0228               	subwf	___awdiv@dividend,w
  1308  00D4                     u445:
  1309  00D4  1C03               	skipc
  1310  00D5  28D7               	goto	u441
  1311  00D6  28D8               	goto	u440
  1312  00D7                     u441:
  1313  00D7  28DF               	goto	l949
  1314  00D8                     u440:
  1315  00D8                     l945:
  1316  00D8  0826               	movf	___awdiv@divisor,w
  1317  00D9  02A8               	subwf	___awdiv@dividend,f
  1318  00DA  0827               	movf	___awdiv@divisor+1,w
  1319  00DB  1C03               	skipc
  1320  00DC  03A9               	decf	___awdiv@dividend+1,f
  1321  00DD  02A9               	subwf	___awdiv@dividend+1,f
  1322  00DE                     l947:
  1323  00DE  142D               	bsf	___awdiv@quotient,0
  1324  00DF                     l949:
  1325  00DF  3001               	movlw	1
  1326  00E0                     u455:
  1327  00E0  1003               	clrc
  1328  00E1  0CA7               	rrf	___awdiv@divisor+1,f
  1329  00E2  0CA6               	rrf	___awdiv@divisor,f
  1330  00E3  3EFF               	addlw	-1
  1331  00E4  1D03               	skipz
  1332  00E5  28E0               	goto	u455
  1333  00E6                     l951:
  1334  00E6  3001               	movlw	1
  1335  00E7  02AB               	subwf	___awdiv@counter,f
  1336  00E8  1D03               	btfss	3,2
  1337  00E9  28EB               	goto	u461
  1338  00EA  28EC               	goto	u460
  1339  00EB                     u461:
  1340  00EB  28C7               	goto	l943
  1341  00EC                     u460:
  1342  00EC                     l953:
  1343  00EC  082C               	movf	___awdiv@sign,w
  1344  00ED  1903               	btfsc	3,2
  1345  00EE  28F0               	goto	u471
  1346  00EF  28F1               	goto	u470
  1347  00F0                     u471:
  1348  00F0  28F6               	goto	l957
  1349  00F1                     u470:
  1350  00F1                     l955:
  1351  00F1  09AD               	comf	___awdiv@quotient,f
  1352  00F2  09AE               	comf	___awdiv@quotient+1,f
  1353  00F3  0AAD               	incf	___awdiv@quotient,f
  1354  00F4  1903               	skipnz
  1355  00F5  0AAE               	incf	___awdiv@quotient+1,f
  1356  00F6                     l957:
  1357  00F6  082E               	movf	___awdiv@quotient+1,w
  1358  00F7  00A7               	movwf	?___awdiv+1
  1359  00F8  082D               	movf	___awdiv@quotient,w
  1360  00F9  00A6               	movwf	?___awdiv
  1361  00FA                     l338:
  1362  00FA  0008               	return
  1363  00FB                     __end_of___awdiv:
  1364                           
  1365                           	psect	text6
  1366  00FB                     __ptext6:	
  1367 ;; *************** function _isr *****************
  1368 ;; Defined at:
  1369 ;;		line 70 in file "Prelab8.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0
  1385 ;;      Temps:          4       0       0       0       0
  1386 ;;      Totals:         4       0       0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		Interrupt level 1
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396  00FB                     _isr:	
  1397                           ;psect for function _isr
  1398                           
  1399  00FB                     i1l1001:
  1400                           
  1401                           ;Prelab8.c: 72:     if(T0IF == 1){
  1402  00FB  1D0B               	btfss	11,2	;volatile
  1403  00FC  28FE               	goto	u57_21
  1404  00FD  28FF               	goto	u57_20
  1405  00FE                     u57_21:
  1406  00FE  2936               	goto	i1l1033
  1407  00FF                     u57_20:
  1408  00FF                     i1l1003:
  1409                           
  1410                           ;Prelab8.c: 73:         PORTE=0X00;
  1411  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0101  0189               	clrf	9	;volatile
  1414  0102                     i1l1005:
  1415                           
  1416                           ;Prelab8.c: 76:         if (banderas == 0b00000000){
  1417  0102  0879               	movf	_banderas,w
  1418  0103  1D03               	btfss	3,2
  1419  0104  2906               	goto	u58_21
  1420  0105  2907               	goto	u58_20
  1421  0106                     u58_21:
  1422  0106  2912               	goto	i1l1013
  1423  0107                     u58_20:
  1424  0107                     i1l1007:
  1425                           
  1426                           ;Prelab8.c: 77:             PORTEbits.RE2 = 0;
  1427  0107  1109               	bcf	9,2	;volatile
  1428                           
  1429                           ;Prelab8.c: 78:             PORTEbits.RE0 = 1;
  1430  0108  1409               	bsf	9,0	;volatile
  1431  0109                     i1l1009:
  1432                           
  1433                           ;Prelab8.c: 79:             PORTD = display[unidades];
  1434  0109  0878               	movf	_unidades,w
  1435  010A  3E33               	addlw	(low (_display| 0))& (0+255)
  1436  010B  0084               	movwf	4
  1437  010C  1383               	bcf	3,7	;select IRP bank0
  1438  010D  0800               	movf	0,w
  1439  010E  0088               	movwf	8	;volatile
  1440  010F                     i1l1011:
  1441                           
  1442                           ;Prelab8.c: 80:             banderas = 0b00000001;
  1443  010F  01F9               	clrf	_banderas
  1444  0110  0AF9               	incf	_banderas,f
  1445                           
  1446                           ;Prelab8.c: 81:         }
  1447  0111  2933               	goto	i1l1029
  1448  0112                     i1l1013:
  1449  0112  0379               	decf	_banderas,w
  1450  0113  1D03               	btfss	3,2
  1451  0114  2916               	goto	u59_21
  1452  0115  2917               	goto	u59_20
  1453  0116                     u59_21:
  1454  0116  2924               	goto	i1l1021
  1455  0117                     u59_20:
  1456  0117                     i1l1015:
  1457                           
  1458                           ;Prelab8.c: 84:             PORTEbits.RE0 = 0;
  1459  0117  1009               	bcf	9,0	;volatile
  1460                           
  1461                           ;Prelab8.c: 85:             PORTEbits.RE1 = 1;
  1462  0118  1489               	bsf	9,1	;volatile
  1463  0119                     i1l1017:
  1464                           
  1465                           ;Prelab8.c: 86:             PORTD = display[decenas];
  1466  0119  083E               	movf	_decenas,w
  1467  011A  3E33               	addlw	(low (_display| 0))& (0+255)
  1468  011B  0084               	movwf	4
  1469  011C  1383               	bcf	3,7	;select IRP bank0
  1470  011D  0800               	movf	0,w
  1471  011E  0088               	movwf	8	;volatile
  1472  011F                     i1l1019:
  1473                           
  1474                           ;Prelab8.c: 87:             banderas = 0b00000010;
  1475  011F  3002               	movlw	2
  1476  0120  00F0               	movwf	??_isr
  1477  0121  0870               	movf	??_isr,w
  1478  0122  00F9               	movwf	_banderas
  1479                           
  1480                           ;Prelab8.c: 88:         }
  1481  0123  2933               	goto	i1l1029
  1482  0124                     i1l1021:
  1483  0124  3002               	movlw	2
  1484  0125  0679               	xorwf	_banderas,w
  1485  0126  1D03               	btfss	3,2
  1486  0127  2929               	goto	u60_21
  1487  0128  292A               	goto	u60_20
  1488  0129                     u60_21:
  1489  0129  2933               	goto	i1l1029
  1490  012A                     u60_20:
  1491  012A                     i1l1023:
  1492                           
  1493                           ;Prelab8.c: 90:             PORTEbits.RE1 = 0;
  1494  012A  1089               	bcf	9,1	;volatile
  1495                           
  1496                           ;Prelab8.c: 91:             PORTEbits.RE2 = 1;
  1497  012B  1509               	bsf	9,2	;volatile
  1498  012C                     i1l1025:
  1499                           
  1500                           ;Prelab8.c: 92:             PORTD = display[centenas];
  1501  012C  0877               	movf	_centenas,w
  1502  012D  3E33               	addlw	(low (_display| 0))& (0+255)
  1503  012E  0084               	movwf	4
  1504  012F  1383               	bcf	3,7	;select IRP bank0
  1505  0130  0800               	movf	0,w
  1506  0131  0088               	movwf	8	;volatile
  1507  0132                     i1l1027:
  1508                           
  1509                           ;Prelab8.c: 93:             banderas = 0b00000000;
  1510  0132  01F9               	clrf	_banderas
  1511  0133                     i1l1029:
  1512                           
  1513                           ;Prelab8.c: 95:         INTCONbits.T0IF = 0;
  1514  0133  110B               	bcf	11,2	;volatile
  1515  0134                     i1l1031:
  1516                           
  1517                           ;Prelab8.c: 96:         TMR0 = 217;
  1518  0134  30D9               	movlw	217
  1519  0135  0081               	movwf	1	;volatile
  1520  0136                     i1l1033:
  1521                           
  1522                           ;Prelab8.c: 99:     if(PIR1bits.ADIF){
  1523  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0138  1F0C               	btfss	12,6	;volatile
  1526  0139  293B               	goto	u61_21
  1527  013A  293C               	goto	u61_20
  1528  013B                     u61_21:
  1529  013B  295A               	goto	i1l81
  1530  013C                     u61_20:
  1531  013C                     i1l1035:
  1532                           
  1533                           ;Prelab8.c: 100:         if(ADCON0bits.CHS == 0){
  1534  013C  0C1F               	rrf	31,w	;volatile
  1535  013D  00F0               	movwf	??_isr
  1536  013E  0C70               	rrf	??_isr,w
  1537  013F  390F               	andlw	15
  1538  0140  3A00               	xorlw	0
  1539  0141  1D03               	skipz
  1540  0142  2944               	goto	u62_21
  1541  0143  2945               	goto	u62_20
  1542  0144                     u62_21:
  1543  0144  2948               	goto	i1l1039
  1544  0145                     u62_20:
  1545  0145                     i1l1037:
  1546                           
  1547                           ;Prelab8.c: 101:             PORTC = ADRESH;
  1548  0145  081E               	movf	30,w	;volatile
  1549  0146  0087               	movwf	7	;volatile
  1550                           
  1551                           ;Prelab8.c: 102:         }
  1552  0147  2959               	goto	i1l1043
  1553  0148                     i1l1039:
  1554  0148  0C1F               	rrf	31,w	;volatile
  1555  0149  00F0               	movwf	??_isr
  1556  014A  0C70               	rrf	??_isr,w
  1557  014B  390F               	andlw	15
  1558  014C  3A01               	xorlw	1
  1559  014D  1D03               	skipz
  1560  014E  2950               	goto	u63_21
  1561  014F  2951               	goto	u63_20
  1562  0150                     u63_21:
  1563  0150  2959               	goto	i1l1043
  1564  0151                     u63_20:
  1565  0151                     i1l1041:
  1566                           
  1567                           ;Prelab8.c: 106:             contador = ADRESH;
  1568  0151  081E               	movf	30,w	;volatile
  1569  0152  00F0               	movwf	??_isr
  1570  0153  0870               	movf	??_isr,w
  1571  0154  00BD               	movwf	_contador
  1572                           
  1573                           ;Prelab8.c: 107:             ponteciometro = contador ;
  1574  0155  083D               	movf	_contador,w
  1575  0156  00F0               	movwf	??_isr
  1576  0157  0870               	movf	??_isr,w
  1577  0158  00F6               	movwf	_ponteciometro
  1578  0159                     i1l1043:
  1579                           
  1580                           ;Prelab8.c: 109:         PIR1bits.ADIF = 0;
  1581  0159  130C               	bcf	12,6	;volatile
  1582  015A                     i1l81:
  1583  015A  0873               	movf	??_isr+3,w
  1584  015B  008A               	movwf	10
  1585  015C  0872               	movf	??_isr+2,w
  1586  015D  0084               	movwf	4
  1587  015E  0E71               	swapf	??_isr+1,w
  1588  015F  0083               	movwf	3
  1589  0160  0EFE               	swapf	btemp,f
  1590  0161  0E7E               	swapf	btemp,w
  1591  0162  0009               	retfie
  1592  0163                     __end_of_isr:
  1593  007E                     btemp	set	126	;btemp
  1594  007E                     wtemp0	set	126
  1595                           
  1596                           	psect	intentry
  1597  0004                     __pintentry:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1600                           
  1601  0004                     interrupt_function:
  1602  007E                     saved_w	set	btemp
  1603  0004  00FE               	movwf	btemp
  1604  0005  0E03               	swapf	3,w
  1605  0006  00F1               	movwf	??_isr+1
  1606  0007  0804               	movf	4,w
  1607  0008  00F2               	movwf	??_isr+2
  1608  0009  080A               	movf	10,w
  1609  000A  00F3               	movwf	??_isr+3
  1610  000B  120A  118A  28FB   	ljmp	_isr
  1611                           
  1612                           	psect	idloc
  1613                           
  1614                           ;Config register IDLOC0 @ 0x2000
  1615                           ;	unspecified, using default values
  1616  2000                     	org	8192
  1617  2000  3FFF               	dw	16383
  1618                           
  1619                           ;Config register IDLOC1 @ 0x2001
  1620                           ;	unspecified, using default values
  1621  2001                     	org	8193
  1622  2001  3FFF               	dw	16383
  1623                           
  1624                           ;Config register IDLOC2 @ 0x2002
  1625                           ;	unspecified, using default values
  1626  2002                     	org	8194
  1627  2002  3FFF               	dw	16383
  1628                           
  1629                           ;Config register IDLOC3 @ 0x2003
  1630                           ;	unspecified, using default values
  1631  2003                     	org	8195
  1632  2003  3FFF               	dw	16383
  1633                           
  1634                           	psect	config
  1635                           
  1636                           ;Config register CONFIG1 @ 0x2007
  1637                           ;	Oscillator Selection bits
  1638                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1639                           ;	Watchdog Timer Enable bit
  1640                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1641                           ;	Power-up Timer Enable bit
  1642                           ;	PWRTE = OFF, PWRT disabled
  1643                           ;	RE3/MCLR pin function select bit
  1644                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1645                           ;	Code Protection bit
  1646                           ;	CP = OFF, Program memory code protection is disabled
  1647                           ;	Data Code Protection bit
  1648                           ;	CPD = OFF, Data memory code protection is disabled
  1649                           ;	Brown Out Reset Selection bits
  1650                           ;	BOREN = OFF, BOR disabled
  1651                           ;	Internal External Switchover bit
  1652                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1653                           ;	Fail-Safe Clock Monitor Enabled bit
  1654                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1655                           ;	Low Voltage Programming Enable bit
  1656                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1657                           ;	In-Circuit Debugger Mode bit
  1658                           ;	DEBUG = 0x1, unprogrammed default
  1659  2007                     	org	8199
  1660  2007  20D4               	dw	8404
  1661                           
  1662                           ;Config register CONFIG2 @ 0x2008
  1663                           ;	Brown-out Reset Selection bit
  1664                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1665                           ;	Flash Program Memory Self Write Enable bits
  1666                           ;	WRT = OFF, Write protection off
  1667  2008                     	org	8200
  1668  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     19      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _divisiones->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisiones
    _divisiones->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1713
                                             18 BANK0      1     1      0
                         _divisiones
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divisiones                                           3     3      0    1713
                                             15 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divisiones
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
     ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 23 09:00:04 2022

                      pc 0002                       l96 0215                       l99 0091  
           ___awdiv@sign 002C                       fsr 0004      ___wmul@multiplicand 0022  
                    l351 01BD                      l185 025B                      l338 00FA  
                    l187 0273                      l801 01F2                      l811 0201  
                    l803 01F3                      l821 020A                      l813 0204  
                    l805 01F7                      l831 020F                      l823 020B  
                    l815 0207                      l807 01FA                      l921 0099  
                    l833 0210                      l825 020C                      l817 0208  
                    l809 01FD                      l931 00AD                      l923 009E  
                    l835 0214                      l827 020D                      l819 0209  
                    l941 00C3                      l933 00AF                      l925 00A0  
                    l917 0092                      l829 020E                      l951 00E6  
                    l943 00C7                      l935 00B5                      l927 00A4  
                    l919 0095                      l791 01C3                      l945 00D8  
                    l937 00B8                      l953 00EC                      l929 00A9  
                    l793 01E2                      l955 00F1                      l947 00DE  
                    l939 00BF                      l795 01E8                      l787 01BE  
                    l957 00F6                      l949 00DF                      l797 01E9  
                    l789 01C2                      l799 01EF                      u400 00B5  
                    u401 00B4                      u420 00C7                      u421 00C6  
                    u415 00B9                      u440 00D8                      u441 00D7  
                    u435 00C8                      u460 00EC                      u380 0099  
                    u700 026F                      u461 00EB                      u445 00D4  
                    u381 0098                      u701 026E                      u470 00F1  
                    u390 00A4                      u710 016A                      u471 00F0  
                    u455 00E0                      u391 00A3                      u711 0169  
                    u720 0175                      u800 0221                      u721 0174  
                    u801 0220                      u730 0180                      u810 022A  
                    u731 017F                      u811 0229                      u820 0238  
                    u821 0237                      u750 0192                      u670 0255  
                    u751 0191                      u671 0254                      u760 019C  
                    u761 019B                      u745 0184                      u780 01AF  
                    u781 01AE                      u765 0198                      u685 025C  
                    u837 023E                      u790 01B4                      u791 01B3  
                    u775 01A3                      u695 0263                      u847 01FF  
                    _isr 00FB                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025                     l1101 0192                     l1111 01B4  
                   l1103 019C                     l1113 01B9                     l1105 01A2  
                   l1121 021B                     l1107 01A9                     l1131 023A  
                   l1123 0221                     l1109 01AF                     l1117 0029  
                   l1133 0241                     l1125 022A                     l1071 0262  
                   l1127 022F                     l1135 0244                     l1119 0216  
                   l1081 0166                     l1073 0269                     l1065 024D  
                   l1129 0238                     l1091 017A                     l1083 016A  
                   l1075 026F                     l1067 024F                     l1093 0180  
                   l1085 016F                     l1069 0255                     l1095 0183  
                   l1087 0171                     l1079 0163                     l1097 018A  
                   l1089 0175                     l1099 018E                     ?_isr 0070  
                   _T0IF 005A                     i1l81 015A                     _TMR0 0001  
                   _main 0216                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 00FB  
        __end_of___awmod 01BE                    _ANSEL 0188          ___awdiv@divisor 0026  
        ___awdiv@counter 002B                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u60_20 012A                    u60_21 0129                    u61_20 013C  
                  u61_21 013B                    u62_20 0145                    u62_21 0144  
                  u63_20 0151                    u63_21 0150                    u57_20 00FF  
                  u57_21 00FE                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u58_20 0107                    u58_21 0106                    u59_20 0117  
                  u59_21 0116                    _setup 01BE                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 024D                   ??_main 0032                   _ADRESH 001E  
       ___awdiv@dividend 0028                   ?_setup 0070                   _ANSELH 0189  
                 i1l1001 00FB                   i1l1011 010F                   i1l1003 00FF  
                 i1l1021 0124                   i1l1013 0112                   i1l1005 0102  
                 i1l1031 0134                   i1l1023 012A                   i1l1015 0117  
                 i1l1007 0107                   i1l1041 0151                   i1l1025 012C  
                 i1l1017 0119                   i1l1009 0109                   i1l1033 0136  
                 i1l1043 0159                   i1l1035 013C                   i1l1027 0132  
                 i1l1019 011F                   i1l1037 0145                   i1l1029 0133  
                 i1l1039 0148                   ___wmul 024D                ??___awdiv 002A  
              ??___awmod 0074         ___awdiv@quotient 002D          ___awmod@divisor 0020  
        ___awmod@counter 0024                   saved_w 007E  __end_of__initialization 0025  
         __pcstackCOMMON 0070             __pidataBANK0 0287            __end_of_setup 0216  
         _OPTION_REGbits 0081                  ??_setup 0074               __pbssBANK0 003D  
             __pmaintext 0216                  ?___wmul 0020               __pintentry 0004  
             _divisiones 0029                  ___awdiv 0092                  ___awmod 0163  
                _decenas 003E                  __ptext1 01BE                  __ptext2 0029  
                __ptext3 024D                  __ptext4 0163                  __ptext5 0092  
                __ptext6 00FB                  _display 0033         ___awmod@dividend 0022  
   end_of_initialization 0025                _PORTEbits 0009              ?_divisiones 0070  
         __end_of___wmul 0274      start_initialization 0011              __end_of_isr 0163  
               ??___wmul 0074               init_fetch0 0274              __pdataBANK0 0033  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
               ?___awdiv 0026                 ?___awmod 0020        interrupt_function 0004  
         ___wmul@product 0074                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
           ??_divisiones 002F       __end_of_divisiones 0092                 _banderas 0079  
               _centenas 0077                 _contador 003D                 _unidades 0078  
             _INTCONbits 000B                 init_ram0 0278                 intlevel1 0000  
          _ponteciometro 0076               _OSCCONbits 008F  
